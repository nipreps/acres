[tox]
requires =
  tox>=4
  tox-uv
envlist =
  py3{9,10,11,12}
  py3{13,14}{,t}
  py39-min
  report
  style
  typecheck
  spellcheck
skip_missing_interpreters = true

[testenv]
runner =
  !min: uv-venv-lock-runner
  min: uv-venv-runner
description = Pytest with coverage
labels = test
pass_env =
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
set_env =
  py3{13,14}t: PYTHONGIL={env:PYTHONGIL:0}
dependency_groups =
  test
uv_resolution =
  min: lowest-direct

commands =
  python -m coverage run -m pytest -svx --doctest-modules \
    --durations=20 --durations-min=1.0 \
    {posargs}

[testenv:report]
skip_install = true
commands =
  coverage combine
  coverage report
  coverage xml
  coverage erase

depends =
    py3{9,10,11,12,13,14}{,t}{,-min}

[testenv:doc]
skip_install = true
dependency_groups =
  doc
commands =
  sphinx-build -M html docs docs/_build -W

[testenv:style]
runner = uv-venv-runner
description = Check our style guide
labels = check
deps =
  ruff
skip_install = true
commands =
  ruff check --diff
  ruff format --diff

[testenv:style-fix]
runner = uv-venv-runner
description = Auto-apply style guide to the extent possible
labels = pre-release
deps =
  ruff
skip_install = true
commands =
  ruff check --fix
  ruff format

[testenv:spellcheck]
runner = uv-venv-runner
description = Check spelling
labels = check
deps =
  codespell[toml]
skip_install = true
commands =
  codespell . {posargs}

[testenv:typecheck]
description = Check type consistency
labels = check
dependency_groups =
  types
skip_install = true
commands =
  mypy --strict src tests
  pyright src tests
