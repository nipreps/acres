name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build & verify package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: hynek/build-and-inspect-python-package@v2
        id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  tox:
    name: Tests on ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']

    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist/
      - run: tar xf dist/*.tar.gz --strip-components=1
      - uses: astral-sh/setup-uv@v5

      - name: Install tox
        run: |
          uv tool install --with=tox-uv tox
      - name: Show tox config
        run: tox c
      - name: Run tox
        run: tox -v --exit-and-dump-after 60 --parallel --installpkg dist/*.whl

      - uses: codecov/codecov-action@v5
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    environment: "Package deployment"
    needs: [tox]
    permissions:
      # Required for trusted publishing
      id-token: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
